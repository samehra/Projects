from agents import Agent, Runner
from pydantic import BaseModel
import asyncio
import os
from dotenv import load_dotenv
from agents import set_default_openai_key

load_dotenv()

set_default_openai_key(os.environ.get("OPENAI_API_KEY", ""))

"""
Implementation of a sequential agent workflow for marketing content generation
Input → Agent 1 (Generate Outline) → Agent 2 (Expand Content) → Agent 3 (Finalize) → Output
"""

# Define output models for the agents
class MarketingOutlineOutput(BaseModel):
    """Model for the outline generated by the first agent"""
    outline: str

class ContentDraftOutput(BaseModel):
    """Model for the expanded content from the second agent"""
    draft_content: str

class FinalContentOutput(BaseModel):
    """Model for the final polished content from the third agent"""
    final_content: str

# Step 1: First agent - Generate marketing campaign outline
outline_agent = Agent(
    name="Marketing Strategist",
    instructions="""
    Your task is to create a well-structured outline for a marketing campaign about the given product.
    The outline should follow the brand guidelines and include main sections like:
    
    - Target audience analysis
    - Key messaging and value propositions
    - Channel strategy
    - Content themes and ideas
    - Timeline and key milestones
    
    Format your outline with clear sections and bullet points.
    """,
    output_type=MarketingOutlineOutput
)

# Step 2: Second agent - Expand outline into detailed content
content_agent = Agent(
    name="Content Creator",
    instructions="""
    Your task is to expand the marketing campaign outline into detailed content.
    For each section in the outline:
    
    1. Develop the ideas with concrete examples
    2. Create compelling copy for main touchpoints
    3. Suggest visuals or design elements
    4. Include calls-to-action
    
    Keep the brand voice consistent throughout.
    """,
    output_type=ContentDraftOutput
)

# Step 3: Third agent - Polish and finalize content
finalize_agent = Agent(
    name="Content Editor",
    instructions="""
    Your task is to polish and finalize the marketing content.
    
    1. Ensure consistency in tone and messaging
    2. Improve clarity and impact
    3. Check for alignment with brand guidelines
    4. Add finishing touches to make the content shine
    5. Format the final content professionally
    
    The output should be a ready-to-use marketing campaign.
    """,
    output_type=FinalContentOutput
)

async def create_marketing_campaign(product_name, brand_guidelines, target_audience):
    """Main function to orchestrate the marketing campaign creation workflow"""
    # Step 1: Generate initial outline
    print("Step 1: Generating marketing campaign outline...")
    outline_input = f"""
    Product: {product_name}
    Brand Guidelines: {brand_guidelines}
    Target Audience: {target_audience}
    
    Please generate a detailed marketing campaign outline for this product.
    """
    
    outline_result = await Runner.run(outline_agent, outline_input)
    outline_output = outline_result.final_output_as(MarketingOutlineOutput)
    print("✓ Generated initial campaign outline")
    
    # Step 2: Expand outline into detailed content
    print("Step 2: Creating detailed content...")
    content_input = f"""
    Product: {product_name}
    Brand Guidelines: {brand_guidelines}
    Target Audience: {target_audience}
    
    Please expand this campaign outline into detailed content:
    
    {outline_output.outline}
    """
    
    content_result = await Runner.run(content_agent, content_input)
    content_output = content_result.final_output_as(ContentDraftOutput)
    print("✓ Expanded outline into detailed content")
    
    # Step 3: Polish and finalize content
    print("Step 3: Finalizing campaign content...")
    finalize_input = f"""
    Product: {product_name}
    Brand Guidelines: {brand_guidelines}
    
    Please polish and finalize this marketing campaign content:
    
    {content_output.draft_content}
    """
    
    finalize_result = await Runner.run(finalize_agent, finalize_input)
    final_content = finalize_result.final_output_as(FinalContentOutput)
    print("✓ Completed final marketing campaign")
    
    return final_content.final_content

async def main():
    # Example usage
    product_name = "EcoFresh Air Purifier"
    
    brand_guidelines = """
    - Modern, eco-conscious brand voice
    - Emphasize sustainability and health benefits
    - Use approachable, jargon-free language
    - Color scheme: greens and blues
    - Target emotion: peace of mind and well-being
    """
    
    target_audience = """
    - Urban professionals ages 25-45
    - Health-conscious consumers
    - Parents concerned about indoor air quality
    - Sustainability-minded shoppers
    - Mid to high income bracket
    """
    
    final_campaign = await create_marketing_campaign(product_name, brand_guidelines, target_audience)
    
    if final_campaign:
        print("\nFinal Marketing Campaign:")
        print("=" * 50)
        print(final_campaign)

if __name__ == "__main__":
    asyncio.run(main())
